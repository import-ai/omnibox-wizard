name: Registry push

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
  pull_request:
    branches:
      - 'main'

concurrency:
  group: registry-push-${{ github.ref }}
  cancel-in-progress: true

jobs:
  runtime:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.modified, 'pyproject.toml') ||
      contains(github.event.head_commit.modified, 'poetry.lock') ||
      contains(github.event.head_commit.added, 'pyproject.toml') ||
      contains(github.event.head_commit.added, 'poetry.lock')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta (runtime)
        id: meta_runtime
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/import-ai/omnibox-wizard-runtime
          tags: |
            type=sha
            type=raw,value=latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push runtime image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: runtime.Dockerfile
          push: true
          tags: ${{ steps.meta_runtime.outputs.tags }}
          labels: ${{ steps.meta_runtime.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm64

  app:
    runs-on: ubuntu-latest
    needs: [runtime]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta (app)
        id: meta_app
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/import-ai/omnibox-wizard
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr.io Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push app image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta_app.outputs.tags }}
          labels: ${{ steps.meta_app.outputs.labels }}
          platforms: |
            linux/amd64
            linux/arm64

      - name: DEV Webhook
        if: github.event_name == 'push'
        run: |
          curl "${{ secrets.DEV_WEBHOOK_URL }}/dev" -H "Authorization: Bearer ${{ secrets.DEV_WEBHOOK_API_KEY }}"

      - name: PR Webhook
        if: github.event_name == 'pull_request'
        run: |
          curl "${{ secrets.DEV_WEBHOOK_URL }}/pr?module=wizard&pr=pr-${{ github.event.number }}" -H "Authorization: Bearer ${{ secrets.DEV_WEBHOOK_API_KEY }}"
